/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode detectCycle(ListNode head) {
        ListNode f = head;
        ListNode s = head;
        int length = 0;

        while(f!=null && f.next!=null){
            f = f.next.next;
            s =s.next;
            if(f == s){
                ListNode temp = s;
                do{
                    temp = temp.next;
                    length++;
                }while(temp!=s);
                break;
            }
        }

        if(length == 0){
            return null;
        }

        f = head;
        s = head;

        while(length > 0){
            s = s.next;
            length--;
        }

        while(s != f){
            f = f.next;
            s = s.next;
        }

        return s;
    }
}
